---
env:
  es6: true
rules:
  accessor-pairs: error
  array-bracket-newline:
    - error
    - consistent
  array-bracket-spacing:
    - error
    - never
  array-callback-return: error
  array-element-newline:
    - error
    - ArrayPattern: consistent
  arrow-body-style: error
  arrow-parens: error
  arrow-spacing: error
  block-scoped-var: error
  block-spacing: error
  brace-style: error
  callback-return: error
  camelcase: off
  capitalized-comments:
    - error
    - always
    - ignoreConsecutiveComments: true
  class-methods-use-this: error
  comma-dangle:
    - error
    - arrays: always-multiline
      objects: always-multiline
      functions: never
  comma-spacing:
    - error
    - before: false
      after: true
  comma-style:
    - error
    - last
  complexity: error
  computed-property-spacing: error
  consistent-return: error
  consistent-this: error
  constructor-super: error
  curly:
    - error
    - all
  default-case: error
  default-param-last: error
  dot-location:
    - error
    - property
  dot-notation: error
  eol-last: error
  eqeqeq: error
  for-direction: error
  func-call-spacing: error
  func-name-matching: error
  func-names: error
  func-style:
    - error
    - declaration
    - allowArrowFunctions: true
  function-call-argument-newline:
    - error
    - consistent
  function-paren-newline: error
  generator-star-spacing: error
  getter-return: error
  global-require: error
  grouped-accessor-pairs: error
  guard-for-in: error
  handle-callback-err: error
  id-blacklist: off
  id-length: error
  id-match: off
  implicit-arrow-linebreak: error
  indent:
    - error
    - 4
    - ignoredNodes:
      # Allow not indenting the body of GObject.registerClass, since in the
      # future it's intended to be a decorator
      - 'CallExpression[callee.object.name=GObject][callee.property.name=registerClass] > ClassExpression:first-child'
      # Allow dedenting chained member expressions
      MemberExpression: 'off'
  init-declarations: off
  jsx-quotes: error
  key-spacing:
    - error
    - beforeColon: false
      afterColon: true
  keyword-spacing:
    - error
    - before: true
      after: true
  line-comment-position: error
  linebreak-style:
    - error
    - unix
  lines-around-comment: error
  lines-between-class-members: error
  max-classes-per-file: error
  max-depth: error
  max-len:
    - error
    - ignoreTemplateLiterals: true
      ignoreStrings: true
      ignoreRegExpLiterals: true
  max-lines: off
  max-lines-per-function: off
  max-nested-callbacks: error
  max-params: error
  max-statements: off
  max-statements-per-line: error
  multiline-comment-style:
    - error
    - separate-lines
  multiline-ternary:
    - error
    - always-multiline
  new-cap: error
  new-parens: error
  newline-per-chained-call: off
  no-alert: error
  no-array-constructor: error
  no-async-promise-executor: error
  no-await-in-loop: error
  no-bitwise: off
  no-buffer-constructor: error
  no-caller: error
  no-case-declarations: error
  no-class-assign: error
  no-compare-neg-zero: error
  no-cond-assign: error
  no-confusing-arrow: error
  no-console: warn
  no-const-assign: error
  no-constant-condition:
    - error
    - checkLoops: false
  no-constructor-return: error
  no-continue: error
  no-control-regex: error
  no-debugger: error
  no-delete-var: error
  no-div-regex: error
  no-dupe-args: error
  no-dupe-class-members: error
  no-dupe-else-if: error
  no-dupe-keys: error
  no-duplicate-case: error
  no-duplicate-imports: error
  no-else-return: error
  no-empty:
    - error
    - allowEmptyCatch: true
  no-empty-character-class: error
  no-empty-function: error
  no-empty-pattern: error
  no-eq-null: error
  no-eval: error
  no-ex-assign: error
  no-extend-native: error
  no-extra-bind: error
  no-extra-boolean-cast: error
  no-extra-label: error
  no-extra-parens:
    - error
    - all
    - conditionalAssign: false
      nestedBinaryExpressions: false
      returnAssign: false
  no-extra-semi: error
  no-fallthrough: error
  no-floating-decimal: error
  no-func-assign: error
  no-global-assign: error
  no-implicit-coercion:
    - error
    - allow:
      - '!!'
  no-implicit-globals: error
  no-implied-eval: error
  no-import-assign: error
  no-inline-comments: error
  no-inner-declarations: error
  no-invalid-regexp: error
  no-invalid-this: error
  no-irregular-whitespace: error
  no-iterator: error
  no-label-var: error
  no-labels: error
  no-lone-blocks: error
  no-lonely-if: error
  no-loop-func: error
  no-magic-numbers: off
  no-misleading-character-class: error
  no-mixed-operators: error
  no-mixed-requires: error
  no-mixed-spaces-and-tabs: error
  no-multi-assign: error
  no-multi-spaces: error
  no-multi-str: error
  no-multiple-empty-lines: error
  no-negated-condition: error
  no-nested-ternary: error
  no-new: error
  no-new-func: error
  no-new-object: error
  no-new-require: error
  no-new-symbol: error
  no-new-wrappers: error
  no-obj-calls: error
  no-octal: error
  no-octal-escape: error
  no-param-reassign: error
  no-path-concat: error
  no-plusplus: off
  no-process-env: error
  no-process-exit: error
  no-proto: error
  no-prototype-builtins: 'off'
  no-redeclare: error
  no-regex-spaces: error
  no-restricted-globals: error
  no-restricted-imports: off
  no-restricted-modules: off
  no-restricted-properties:
    - error
    - object: Lang
      property: bind
      message: Use arrow notation or Function.prototype.bind()
    - object: Lang
      property: Class
      message: Use ES6 classes
    - object: imports
      property: mainloop
      message: Use GLib main loops and timeouts
  no-restricted-syntax:
    - error
    - selector: >-
        MethodDefinition[key.name="_init"] >
        FunctionExpression[params.length=1] >
        BlockStatement[body.length=1]
        CallExpression[arguments.length=1][callee.object.type="Super"][callee.property.name="_init"] >
        Identifier:first-child
      message: _init() that only calls super._init() is unnecessary
    - selector: >-
        MethodDefinition[key.name="_init"] >
        FunctionExpression[params.length=0] >
        BlockStatement[body.length=1]
        CallExpression[arguments.length=0][callee.object.type="Super"][callee.property.name="_init"]
      message: _init() that only calls super._init() is unnecessary
  no-return-assign: error
  no-return-await: error
  no-script-url: error
  no-self-assign: error
  no-self-compare: error
  no-sequences: error
  no-setter-return: error
  no-shadow: error
  no-shadow-restricted-names: error
  no-sparse-arrays: error
  no-sync: error
  no-tabs: error
  no-template-curly-in-string: error
  no-ternary: off
  no-this-before-super: error
  no-throw-literal: error
  no-trailing-spaces: error
  no-undef: error
  no-undef-init: error
  no-undefined: error
  no-underscore-dangle: off
  no-unexpected-multiline: error
  no-unmodified-loop-condition: error
  no-unneeded-ternary: error
  no-unreachable: error
  no-unsafe-finally: error
  no-unsafe-negation: error
  no-unused-expressions: error
  no-unused-labels: error
  no-unused-vars:
    - error
    # Vars use a suffix _ instead of a prefix because of file-scope private vars
    - varsIgnorePattern: (^unused|_$|enable|disable)
      argsIgnorePattern: ^(unused|_)
  no-use-before-define: error
  no-useless-call: error
  no-useless-catch: error
  no-useless-computed-key: error
  no-useless-concat: error
  no-useless-constructor: error
  no-useless-escape: error
  no-useless-rename: error
  no-useless-return: error
  no-var: off
  no-void: error
  no-warning-comments: error
  no-whitespace-before-property: error
  no-with: error
  nonblock-statement-body-position:
    - error
    - below
  object-curly-newline:
    - error
    - consistent: true
  object-curly-spacing: error
  object-property-newline: error
  object-shorthand: error
  one-var:
    - error
    - never
  one-var-declaration-per-line:
    - error
    - always
  operator-assignment: error
  operator-linebreak:
    - error
    - before
  padded-blocks:
    - error
    - never
  padding-line-between-statements: off
  prefer-arrow-callback: error
  prefer-const: error
  prefer-destructuring: off
  prefer-exponentiation-operator: error
  prefer-named-capture-group: error
  prefer-numeric-literals: error
  prefer-object-spread: error
  prefer-promise-reject-errors: error
  prefer-regex-literals: error
  prefer-rest-params: error
  prefer-spread: error
  prefer-template: error
  quote-props:
    - error
    - as-needed
  quotes:
    - error
    - single
    - avoidEscape: true
  radix:
    - error
    - as-needed
  require-atomic-updates: error
  require-await: error
  require-unicode-regexp: error
  require-yield: error
  rest-spread-spacing: error
  semi:
    - error
    - always
  semi-spacing:
    - error
    - before: false
      after: true
  semi-style: error
  sort-imports: error
  sort-keys: error
  sort-vars: error
  space-before-blocks: error
  space-before-function-paren:
    - error
    - named: never
      anonymous: always
      asyncArrow: always
  space-in-parens: error
  space-infix-ops:
    - error
    - int32Hint: false
  space-unary-ops: error
  spaced-comment: error
  strict:
    - error
    - never
  switch-colon-spacing: error
  symbol-description: error
  template-curly-spacing: error
  template-tag-spacing: error
  unicode-bom: error
  use-isnan: error
  valid-typeof:
    - error
    - requireStringLiterals: true
  vars-on-top: error
  wrap-iife:
    - error
    - inside
  wrap-regex: error
  yield-star-spacing: error
  yoda:
    - error
    - never
    - onlyEquality: true
globals:
  ARGV: readonly
  Debugger: readonly
  GIRepositoryGType: readonly
  global: readonly
  globalThis: readonly
  imports: readonly
  Intl: readonly
  log: readonly
  logError: readonly
  print: readonly
  printerr: readonly
parserOptions:
  ecmaVersion: 2019
